From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ryan Volz <ryan.volz@gmail.com>
Date: Fri, 14 Mar 2025 11:46:15 -0400
Subject: [PATCH] Debug

---
 src/librtlsdr.c | 17 +++++++++++------
 1 file changed, 11 insertions(+), 6 deletions(-)

diff --git a/src/librtlsdr.c b/src/librtlsdr.c
index 1fecc4e..7f15b3d 100644
--- a/src/librtlsdr.c
+++ b/src/librtlsdr.c
@@ -2160,6 +2160,7 @@ int rtlsdr_read_async(rtlsdr_dev_t *dev, rtlsdr_read_async_cb_t cb, void *ctx,
 		}
 
 		if (RTLSDR_CANCELING == dev->async_status) {
+			printf("enter canceling if\n");
 			next_status = RTLSDR_INACTIVE;
 
 			if (!dev->xfer)
@@ -2172,6 +2173,7 @@ int rtlsdr_read_async(rtlsdr_dev_t *dev, rtlsdr_read_async_cb_t cb, void *ctx,
 				if (LIBUSB_TRANSFER_CANCELLED !=
 						dev->xfer[i]->status) {
 					r = libusb_cancel_transfer(dev->xfer[i]);
+					printf("canceling transfer %i, returned %d\n", i, r);
 					/* handle events after canceling
 					 * to allow transfer status to
 					 * propagate */
@@ -2180,15 +2182,18 @@ int rtlsdr_read_async(rtlsdr_dev_t *dev, rtlsdr_read_async_cb_t cb, void *ctx,
 #endif
 					libusb_handle_events_timeout_completed(dev->ctx,
 									       &zerotv, NULL);
-					if (r < 0) {
-						if (r == LIBUSB_ERROR_NOT_FOUND) {
-							/* ignore transfer not in progress, already
-							* complete, or already cancelled */
-							r = 0;
-						}
+					if (r == LIBUSB_ERROR_NOT_FOUND) {
+						/* transfer not in progress, already complete, or
+						 * already cancelled, but we're here because the
+						 * handler has not yet been called, so keep waiting */
+						libusb_handle_events_timeout_completed(dev->ctx,
+															   &tv,
+															   NULL);
+					} else if (r < 0) {
 						continue;
 					}
 
+					printf("resetting next_status to canceling, r=%d\n", r);
 					next_status = RTLSDR_CANCELING;
 				}
 			}
-- 
2.47.1

